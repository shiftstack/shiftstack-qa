---
# Sets the Ansible Target (a.k.a Managed Node) HOME environment variable to its actual value
# This ensures scripts and applications running on the target machine know the user's home directory
home_dir: "{{ ansible_facts.env['HOME'] }}"
artifacts_dir: "{{ home_dir }}/artifacts"
installation_dir: "{{ home_dir }}/installation/{{ user_cloud }}/{{ ocp_cluster_name }}"
osp_config_dir: "{{ home_dir }}/installation/{{ user_cloud }}/openstack"
polarion_dir: "{{ artifacts_dir }}/test_results"
kubeconfig: "{{ installation_dir }}/auth/kubeconfig"
upi_playbooks_dir: "{{ installation_dir }}"

# Sets the Ansible Controller Node machine's HOME environment variable
controller_home_dir: "{{ lookup('ansible.builtin.env', 'HOME') }}"
# The resources_file and stage_unstable_flag are in the Ansible control node's HOME environment variable
resources_file: "{{ controller_home_dir }}/artifacts/resources.yml"
stage_unstable_flag: "{{ controller_home_dir }}/artifacts/stage_unstable_flag"

admin_cloud: "overcloud"
admin_env_file: "{{ home_dir }}/{{ admin_cloud }}rc"
admin_verify_cacert: false
user_cloud: "shiftstack"
user_env_file: "{{ home_dir }}/{{ user_cloud }}rc"
ocp_cluster_name: "ostest"

topology:
  flavors:
    master:
      name: "master"
      ram: 16384
      vcpus: 4
      disk: 100
    worker:
      name: "worker"
      ram: 8192
      vcpus: 2
      disk: 100
    bootstrap:
      name: "bootstrap"
      ram: 16384
      vcpus: 4
      disk: 100
  replicas:
    master: 3
    worker: 3
  machine_cidr: 10.196.0.0/16

wait_retries: 30
wait_delay: 30
manifests_wait_timeout: 300

openstack_ssl: true
openstack_tlse: false
openstack_key_file: "{{ home_dir }}/.ssh/rhos-dfg-osasinfra-qe"
redhat_ca_file: "https://certs.corp.redhat.com/RH-IT-Root-CA.crt"

openshift_proxy_installation: false
openshift_mirror: false

deploy_installer_host: false
installer_vm_ssh_user: "cloud-user"
custom_network: ''
custom_subnet: ''
custom_router: ''
custom_ports: []
custom_flavor: ''
installer_vm_name: "installer-host"
installer_group: "installer"
installer_ansible_python_interpreter: '/usr/libexec/platform-python'
installer_network: "{{ installer_vm_name | default('installer_host-network', true) }}"
installer_subnet: "{{ custom_subnet | default('installer_host-subnet', true) }}"
installer_router: "{{ custom_router | default('installer_host-router', true) }}"
installer_flavor_name: "{{ custom_flavor| default('m1.medium', true) }}"

restricted_network:
  network_name: 'restricted_network'
  subnet_name: 'restricted_subnet'
  installer_port_name: 'installer_restricted_network_port'
  cidr: '172.16.0.0/24'
  pool_start: '172.16.0.8'
  pool_end: '172.16.0.254'
  installer_ip: '172.16.0.3'
  default_gw: '172.16.0.1' # Used with Kuryr and OpenshiftSDN networking types
  ocp_api_ip: '172.16.0.5'
  ocp_apps_ip: '172.16.0.7'

inventory:
  dir: "/etc/ansible"
  hosts_file: "{{ artifacts_dir }}/hosts-installer"
  backup_file: "{{ artifacts_dir }}/hosts-installer.bck"

openshift_upi:
  network:
    name: network-upi
  subnets:
    ipv4:
      name: subnet-upi
  api_vip_port:
    name: api-upi
  ingress_vip_port:
    name: ingress-upi
  router:
    name: ingress-upi

tests:
  default_go_version_target: '1.21.8'
