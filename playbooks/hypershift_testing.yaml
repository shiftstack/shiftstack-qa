---
- name: TBD
  hosts: localhost
  gather_facts: yes
  vars_files:
    - "../configs/global.yml"
  tasks:

    - name: Install multicluster-engine operator and deploy the default MultiClusterEngine
      vars:
        install_openshift_operator_namespace: multicluster-engine
        install_openshift_operator_catalogsource: redhat-operators
        install_openshift_operator_package: multicluster-engine
        install_openshift_operator_name: multicluster-engine
        install_openshift_operator_provided_api: MultiClusterEngine
        single_namespace_installation: true
      ansible.builtin.include_role:
        name: shiftstack.tools.tools_install_openshift_operator

    - name: Discover OCP version and networkType
      ansible.builtin.include_role:
        name: shiftstack.tools.tools_get_deploy_info
        tasks_from: discover_ocp_version.yml

    - name: Set TP flag if needed
      when: discovered_openshift_release is version('4.19', '<=')
      block:
        - name: Ensure project local-cluster exists
          ansible.builtin.include_role:
            name: shiftstack.tools.tools_ocp_project
            tasks_from: recreate_ocp_project.yml
          vars:
            project_name: local-cluster
            force_delete: false

        # Reference: https://github.com/stolostron/hypershift-addon-operator/blob/main/docs/hypershift_operator_configuration.md#customizing-the-hypershift-operator-installation-flags
        - name: Set tech-preview-no-upgrade flag for hypershift operator
          kubernetes.core.k8s:
            state: present
            kubeconfig: "{{ kubeconfig }}"
            definition:
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: hypershift-operator-install-flags
                namespace: local-cluster
              data:
                installFlagsToAdd: "--tech-preview-no-upgrade"
                installFlagsToRemove: ""

    - name: Get ConsoleCLIDownload resource
      ansible.builtin.command: oc get ConsoleCLIDownload hcp-cli-download -o json
      register: hcp_cli_json

    - name: Create a temporary directory for HCP CLI
      ansible.builtin.tempfile:
        state: directory
        suffix: hcp
      register: hcp_tmpdir

    - name: Download HCP CLI tarball
      ansible.builtin.get_url:
        url: >-
          {{
            hcp_cli_json.stdout
            | from_json
            | community.general.json_query("spec.links[?text=='Download hcp CLI for Linux for x86_64'].href")
            | first
          }}
        dest: "{{ hcp_tmpdir.path }}/hcp-cli.tgz"

    - name: Extract HCP CLI tarball
      ansible.builtin.unarchive:
        src: "{{ hcp_tmpdir.path }}/hcp-cli.tgz"
        dest: "{{ hcp_tmpdir.path }}"
        remote_src: true

    - name: Make the hcp binary executable
      ansible.builtin.file:
        path: "{{ hcp_tmpdir.path }}/hcp"
        mode: '0755'
        state: file

    - name: Move hcp binary to /usr/local/bin
      ansible.builtin.copy:
        src: "{{ hcp_tmpdir.path }}/hcp"
        dest: /usr/local/bin/hcp
        remote_src: true
        mode: '0755'
      become: true

    - name: Insert in .bashrc hypershift completion
      ansible.builtin.lineinfile:
        dest: "{{ home_dir }}/.bashrc"
        line: "source <(hcp completion bash)"
