---
# tasks file for post
- name: Set the update channel to null (To avoid CannotRetrieveUpdates alert)
  kubernetes.core.k8s:
    state: present
    kubeconfig: "{{ kubeconfig }}"
    definition:
      apiVersion: config.openshift.io/v1
      kind: ClusterVersion
      metadata:
        name: version
      spec:
        channel: ""

- name: Set the workers and masters NTP server
  ansible.builtin.include_tasks: set_ntp.yml
  when: openshift_proxy_installation

- name: Disable image Registry Operator redirects
  # To pull images directly from Red Hat OpenStack Platform (RHOSP) Swift storage
  # https://docs.openshift.com/container-platform/4.17/registry/configuring_registry_storage/configuring-registry-storage-openstack-user-infrastructure.html#registry-configuring-registry-storage-swift-trust_configuring-registry-storage-openstack-user-infrastructure
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition:
      apiVersion: imageregistry.operator.openshift.io/v1
      kind: Config
      metadata:
        name: cluster
      spec:
        disableRedirect: true

# DNS resolution management needed for RHOSO pods to be able to resolve
# shift-on-stack cluster Apps endpoints (for telemetry tests the RHOSO
# pods need to scrape metrics from shift-on-stack cluster prometheus
# federation route). It requires SSH passwordless login to the
# hypervisor (previous ssh key exchange).
# https://issues.redhat.com/browse/SOSQE-2170
- name: DNS management in the hypervisor
  block:
    - name: Include vars from registered resources
      ansible.builtin.include_vars:
        file: "{{ resources_file }}"
        name: resources

    - name: Add APPS DNS entry to the dnsmasq service in the hypervisor '{{ hypervisor }}'
      ansible.builtin.lineinfile:
        path: "{{ hypervisor_dnsmasq_addresses_file }}"
        line: "address=/apps.{{ ocp_cluster_name }}.{{ ocp_base_domain }}/{{ resources.apps_accessible_ip }}"
        insertafter: EOF  # Ensures the line is added at the end of the file
      delegate_to: "{{ hypervisor }}"
      remote_user: root

    - name: Restart service in the hypervisor '{{ hypervisor_dnsmasq_service }}' - '{{ hypervisor }}'
      ansible.builtin.systemd:
        name: "{{ hypervisor_dnsmasq_service }}"
        state: restarted
      delegate_to: "{{ hypervisor }}"
      remote_user: root

#TODO: remove entry in cleanup
