---
- name: Discover pre-created FIPs stored on /etc/hosts
  ansible.builtin.set_fact:
    precreated_api_fip: "{{ lookup('file', '/etc/hosts').splitlines() |
                      select('search', api_filter) |
                      first | split() | first }}"
    precreated_ingress_fip: "{{ lookup('file', '/etc/hosts').splitlines() |
                      select('search', ingress_filter) |
                      first | split() | first }}"
  vars:
    api_filter: "api.{{ ocp_cluster_name }}.{{ user_cloud }}.com"
    ingress_filter: "oauth-openshift.apps.{{ ocp_cluster_name }}.{{ user_cloud }}.com"

- name: Generate install-config.yaml from template
  ansible.builtin.template:
    src: install-config.yaml.j2
    dest: "{{ user_cloud_installation_dir }}/install-config.yaml"
    mode: u=rw,g=rw,o=r
  vars:
    installcfg_cluster_name: "{{ ocp_cluster_name }}"
    installcfg_worker_flavor: "{{ topology.flavors.worker.name }}"
    installcfg_worker_replicas: "{{ (installation_type == 'upi') | ternary('0', topology.replicas.worker) }}"
    installcfg_master_flavor: "{{ topology.flavors.master.name }}"
    installcfg_master_replicas: "{{ topology.replicas.master }}"
    installcfg_machine_cidr: "{{ topology.machine_cidr }}"
    installcfg_network_type: "{{ openshift_network_type }}"
    installcfg_external_network: "{{ infra.external_network }}"
    installcfg_region: "{{ infra.region }}"
    installcfg_dns_servers: "{{ infra.dns_servers }}"
    installcfg_api_floating_ip: "{{ precreated_api_fip }}"
    installcfg_ingress_floating_ip: "{{ precreated_ingress_fip }}"

- name: Copy the install-config.yaml to installation dir
  ansible.builtin.copy:
    src: "{{ user_cloud_installation_dir }}/install-config.yaml"
    dest: "{{ ocp_installation_dir }}/install-config.yaml"
    remote_src: yes
    mode: u=rwx,g=rwx,o=rwx
