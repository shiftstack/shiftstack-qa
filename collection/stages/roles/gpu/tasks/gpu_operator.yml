---
- name: Create NVIDIA gpu operator namespace
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: nvidia-gpu-operator

- name: Create NVIDIA gpu operator group
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition:
      apiVersion: operators.coreos.com/v1
      kind: OperatorGroup
      metadata:
        name: nvidia-gpu-operator-group
        namespace: nvidia-gpu-operator
      spec:
        targetNamespaces:
          - nvidia-gpu-operator

- name: Get operator channel
  ansible.builtin.shell: |
    oc get packagemanifest gpu-operator-certified -n openshift-marketplace -o jsonpath='{.status.defaultChannel}'
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
  register: gpu_operator_channel

- name: Get the startingCSV value
  ansible.builtin.shell: |
    oc get packagemanifests/gpu-operator-certified -n openshift-marketplace -ojson | jq -r '.status.channels[] | select(.name == "{{ gpu_operator_channel.stdout }}") | .currentCSV'
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
  register: gpu_csv_value

- name: Create GPU operator subscription
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: gpu-operator-certified
        namespace: nvidia-gpu-operator
      spec:
        channel: "{{ gpu_operator_channel.stdout }}"
        installPlanApproval: Manual
        name: gpu-operator-certified
        source: "{{ ocp_pre_released_version | ternary('certified-operators-custom', 'certified-operators') }}"
        sourceNamespace: openshift-marketplace
        startingCSV: "{{ gpu_csv_value.stdout }}"
    wait: true
    wait_timeout: 300
    wait_condition:
      type: CatalogSourcesUnhealthy
      status: "False"

- name: Get Install plan
  ansible.builtin.shell: |
    oc get installplan -n nvidia-gpu-operator -oname
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
  register: gpu_install_plane

- name: Approve Install plan
  ansible.builtin.shell: |
    oc patch "{{ gpu_install_plane.stdout }}" -n nvidia-gpu-operator --type merge --patch '{"spec":{"approved":true }}'
  environment:
    KUBECONFIG: "{{ kubeconfig }}"

- name: Create GPU cluster policy
  ansible.builtin.shell: |
    oc get csv -n nvidia-gpu-operator "{{ gpu_csv_value.stdout }}" -ojsonpath={.metadata.annotations.alm-examples} | jq .[0] > /tmp/clusterpolicy.json
  environment:
    KUBECONFIG: "{{ kubeconfig }}"

- name: Apply GPU cluster policy
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    src: "/tmp/clusterpolicy.json"
    apply: true
    wait: true
    wait_timeout: 300
    wait_condition:
      type: Ready
      status: "True"

- name: Wait for GPU Operator add node label
  ansible.builtin.shell: |
    oc get node -l nvidia.com/gpu.present -oname
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
  register: gpu_node_lable
  until: gpu_node_lable.stdout_lines | length > 0
  retries: 120
  delay: 10
