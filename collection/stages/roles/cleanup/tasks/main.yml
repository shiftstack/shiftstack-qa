---
- name: Remove existing openstack creds directory
  ansible.builtin.file:
    path: "{{ home_dir }}/.config/openstack"
    state: absent

- name: Load default openstack creds directory so we can inspect if the "{{ user_cloud }}" is there
  ansible.builtin.copy:
    src: "{{ home_dir }}/.original-config/openstack/"
    dest: "{{ home_dir }}/.config/openstack/"
    remote_src: yes
    mode: u=rwx,g=rwx,o=rwx

- name: Check if OpenStack "{{ user_cloud }}" project exists
  openstack.cloud.project_info:
    cloud: "{{ admin_cloud }}"
    name: "{{ user_cloud }}"
    verify: "{{ admin_verify_cacert }}"
  register: openstack_project_info
  ignore_errors: true # noqa: ignore-errors

- name: Notify that the OpenStack cloud doesn't exist
  ansible.builtin.debug:
    msg: |
      OpenStack cloud does not exist: "{{ admin_cloud }}"
  when: openstack_project_info is failed

- name: Cleanup the OpenStack project in the case the OpenStack cloud exists
  when: openstack_project_info is succeeded
  block:
    - name: Fail if more than one OpenStack "{{ user_cloud }}" project exist
      when: openstack_project_info.projects | length > 1
      ansible.builtin.fail:
        msg: >-
          Cleanup failed.
          More than one OpenStack "{{ user_cloud }}" project: {{ openstack_project_info.projects | length }}

    - name: Cleanup the ShiftStack setup
      when: openstack_project_info.projects | length == 1
      block:
        - name: Remove default openstack creds directory
          ansible.builtin.file:
            path: "{{ home_dir }}/.config/openstack"
            state: absent

        - name: Restore openstack creds directory with {{ user_cloud }} credentials
          ansible.builtin.copy:
            src: "{{ osp_config_dir }}/"
            dest: "{{ home_dir }}/.config/openstack/"
            remote_src: yes
            mode: u=rwx,g=rwx,o=rwx

        - name: Discover the OpenShift installation type
          ansible.builtin.include_tasks: detect_ocp_installation.yml

        - name: Destroy the OpenShift cluster if it exists
          ansible.builtin.include_tasks: destroy_openshift_cluster.yml
          when: existing_ocp_installation_type != ''

        - name: Cleanup the OpenStack project
          vars:
            project: "{{ openstack_project_info.projects[0] }}"
          ansible.builtin.include_tasks: openstack_project_cleanup.yml
