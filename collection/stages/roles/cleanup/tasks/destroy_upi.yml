---
- name: Delete Openstack resources for OCP UPI deployment
  block:
    # - name: Remove the '{{ openshift_dualstack.network.name }}' network from the '{{ installer_vm_name }}' (connectivity to IPv6 API in dualstack)
    #   ansible.builtin.shell: "openstack server remove network {{ installer_vm_name }} {{ openshift_dualstack.network.name }}"
    #   environment:
    #     OS_CLOUD: "{{ user_cloud }}"
    #   ignore_errors: true

    - name: Create a {{ upi_playbooks_dir }} directory if it does not exist
      file:
        path: "{{ upi_playbooks_dir }}"
        state: directory

    - name: "Check if {{ upi_playbooks_dir }}/down-bootstrap.yaml exists"
      stat:
        path: "{{ upi_playbooks_dir }}/down-bootstrap.yaml"
      register: stat_result

    - name: Delete the bootstrap VM (down-bootstrap.yaml)
      vars:
        log_file: "{{ upi_playbooks_logs_dir }}/down-bootstrap.log"
        desc: "Bootstrap VM deletion"
        cmd: "{{ upi_playbooks_dir }}/down-bootstrap.yaml"
      include_tasks: execute_down_playbooks.yml
      when: stat_result.stat.exists

    - name: "Check if {{ upi_playbooks_dir }}/down-control-plane.yaml exists"
      stat:
        path: "{{ upi_playbooks_dir }}/down-control-plane.yaml"
      register: stat_result

    - name: Delete the control plane VMs (down-control-plane.yaml)
      vars:
        log_file: "{{ upi_playbooks_logs_dir }}/down-control-plane.log"
        desc: "Control plane VMs deletion"
        cmd: "{{ upi_playbooks_dir }}/down-control-plane.yaml"
      include_tasks: execute_down_playbooks.yml
      when: stat_result.stat.exists

    - name: "Check if {{ upi_playbooks_dir }}/down-compute-nodes.yaml exists"
      stat:
        path: "{{ upi_playbooks_dir }}/down-compute-nodes.yaml"
      register: stat_result

    - name: Delete the compute VMs (down-compute-nodes.yaml)
      vars:
        log_file: "{{ upi_playbooks_logs_dir }}/down-compute-nodes.log"
        desc: "Compute VMs deletion"
        cmd: "{{ upi_playbooks_dir }}/down-compute-nodes.yaml"
      include_tasks: execute_down_playbooks.yml
      when: stat_result.stat.exists

    - name: "Check if {{ upi_playbooks_dir }}/down-load-balancers.yaml exists"
      stat:
        path: "{{ upi_playbooks_dir }}/down-load-balancers.yaml"
      register: stat_result

    - name: Delete the Load Balancers (down-load-balancers.yaml)
      vars:
        log_file: "{{ upi_playbooks_logs_dir }}/down-load-balancers.log"
        desc: "Load Balancers deletion"
        cmd: "{{ upi_playbooks_dir }}/down-load-balancers.yaml"
      include_tasks: execute_down_playbooks.yml
      when: stat_result.stat.exists

    - name: "Check if {{ upi_playbooks_dir }}/down-containers.yaml"
      stat:
        path: "{{ upi_playbooks_dir }}/down-containers.yaml"
      register: stat_result

    - name: Delete the containers (down-containers.yaml)
      vars:
        log_file: "{{ upi_playbooks_logs_dir }}/down-containers.log"
        desc: "Containers deletion"
        cmd: "{{ upi_playbooks_dir }}/down-containers.yaml"
      include_tasks: execute_down_playbooks.yml
      when: stat_result.stat.exists

    - name: "Check if {{ upi_playbooks_dir }}/down-network.yaml"
      stat:
        path: "{{ upi_playbooks_dir }}/down-network.yaml"
      register: stat_result

    - name: Delete network resources (down-network.yaml)
      vars:
        log_file: "{{ upi_playbooks_logs_dir }}/down-network.log"
        desc: "OSP network resources deletion"
        cmd: "{{ upi_playbooks_dir }}/down-network.yaml"
      include_tasks: execute_down_playbooks.yml
      when: stat_result.stat.exists

    - name: "Check if {{ upi_playbooks_dir }}/down-security-groups.yaml"
      stat:
        path: "{{ upi_playbooks_dir }}/down-security-groups.yaml"
      register: stat_result

    - name: Delete the security groups (down-security-groups.yaml)
      vars:
        log_file: "{{ upi_playbooks_logs_dir }}/down-security-groups.log"
        desc: "OSP security groups deletion"
        cmd: "{{ upi_playbooks_dir }}/down-security-groups.yaml"
      include_tasks: execute_down_playbooks.yml
      when: stat_result.stat.exists
