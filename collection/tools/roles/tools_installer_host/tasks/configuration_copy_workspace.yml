---
- name: Copy files from the OSP config directory to the installer host VM
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: "{{ installer_vm_osp_config_dir }}/"
    mode: u=rw,g=rw,o=r
  loop: "{{ files_to_copy }}"

- name: Change the cacert path in the installer host clouds.yaml
  ansible.builtin.lineinfile:
    path: '~/clouds.yaml'
    regexp: '^(\s*)cacert:'
    line: '\1cacert: {{ installer_host_cacert }}'
    insertafter: '{{ user_cloud }}'
    backrefs: yes
  when: not (legacy_installation | default(False))

- name: Copy the secure.yaml file from the OSP config directory to the installer host VM
  ansible.builtin.copy:
    src: "{{ osp_config_dir }}/secure.yaml"
    dest: "{{ installer_vm_osp_config_dir }}/secure.yaml"
    mode: u=rw,g=rw,o=r
  when: not (legacy_installation | default(False))

- name: Create symlinks for clouds.yaml and secure.yaml in the proper place for OS_CLOUD
  block:
    - name: Ensure ~/.config/openstack exists in the installer host VM
      ansible.builtin.file:
        path: ~/.config/openstack
        state: directory
        mode: u=rwx,g=rw,o=r

    - name: Create a symlink to ~/clouds.yaml in ~/.config/openstack/clouds.yaml
      ansible.builtin.file:
        src: "{{ installer_vm_osp_config_dir }}/clouds.yaml"
        dest: ~/.config/openstack/clouds.yaml
        force: true
        state: link

    - name: Create a symlink to ~/secure.yaml in ~/.config/openstack/secure.yaml
      ansible.builtin.file:
        src: "{{ installer_vm_osp_config_dir }}/secure.yaml"
        dest: ~/.config/openstack/secure.yaml
        force: true
        state: link
      when: not (legacy_installation | default(False))

- name: Copy ssh private key to the installer host VM
  ansible.builtin.copy:
    src: "{{ openstack_key_file }}"
    dest: "~/.ssh/"
    mode: u=rw,g=rw,o=r

- name: CA cert management for SSL and TLS-E deployments
  when: openstack_ssl | default(false) or
        openstack_tlse | default(false)
  block:
    - name: Check if the CA certificate {{ cacert }} exists in localhost
      ansible.builtin.stat:
        path: "{{ cacert }}"
      register: stat_result
      delegate_to: localhost

    - name: Fail if the CA certificate doesn't exist
      ansible.builtin.assert:
        that:
          - stat_result.stat.exists
        fail_msg: "Could not find the CA certificate {{ cacert }} in localhost"
        success_msg: "The CA certificate {{ cacert }} was found in localhost"

    - name: Copy the CA cert from localhost to the installer host VM
      block:
        - name: Copy the CA cert to the installer host VM
          ansible.builtin.copy:
            src: "{{ cacert }}"
            dest: "{{  installer_host_cacert is defined | ternary(installer_host_cacert, cacert) }}"
            mode: u=rwx,g=rwx,o=rwx
          become: yes

        - name: Add the CA cert to the trusted root chain in the installer host VM
          ansible.builtin.command: update-ca-trust extract
          changed_when: true
          become: yes
