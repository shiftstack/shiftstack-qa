---
- name: Copy files from the local home dir to the installer host VM
  vars:
    files_to_copy:
      - "{{ user_env_file | basename }}"
      - "{{ admin_env_file | basename }}"
      - "clouds.yaml"
      - "core_puddle_version"
      - ".ssh/rhos-dfg-osasinfra-qe"
  ansible.builtin.copy:
    src: "{{ home_dir }}/{{ item }}"
    dest: "{{ installer_vm.home_dir }}/{{ item }}"
    mode: u=rw,g=rw,o=r
  loop: "{{ files_to_copy }}"

# The '/etc/rhosp-release' file is needed in the 'Openshift Testing Prepare' stage
- name: Copy the 'rhosp-release' file from local to the installer host VM
  ansible.builtin.copy:
    src: "/etc/rhosp-release"
    dest: "/etc/rhosp-release"
    mode: u=rw,g=rw,o=r
  become: yes

- name: Copy clouds.yaml to the proper place for OS_CLOUD in OSP >= 17.0
  when: openstack_version|int >= 17
  block:
    - name: Create directory ~/.config/openstack for OSP >= 17.0
      ansible.builtin.file:
        path: ~/.config/openstack
        state: directory
        mode: u=rwx,g=rw,o=r

    - name: Copy clouds.yaml to ~/.config/openstack for OSP >= 17.0
      ansible.builtin.file:
        src: ~/clouds.yaml
        dest: ~/.config/openstack/clouds.yaml
        force: true
        state: link

- name: CA cert management for SSL and TLS-E deployments
  when: openstack_ssl | default(false) or
        openstack_tlse | default(false)
  block:
    - name: Check if the CA certificate {{ cacert }} exists in localhost
      ansible.builtin.stat:
        path: "{{ cacert }}"
      register: stat_result
      delegate_to: localhost

    - name: Fail if the CA certificate doesn't exist
      ansible.builtin.assert:
        that:
          - stat_result.stat.exists
        fail_msg: "Could not find the CA certificate {{ cacert }} in localhost"
        success_msg: "The CA certificate {{ cacert }} was found in localhost"

    - name: Copy the CA cert from localhost to the installer host VM
      block:
        - name: Ensure {{ cacert | dirname }} exists in the installer host VM
          ansible.builtin.file:
            path: "{{ cacert | dirname }}"
            state: directory
            mode: u=rwx,g=rw,o=r
          become: yes

        - name: Copy the CA cert to the installer host VM
          ansible.builtin.copy:
            src: "{{ cacert }}"
            dest: "{{ cacert }}"
            mode: u=rw,g=rw,o=r
          become: yes

        - name: Add the CA cert to the trusted root chain in the installer host VM
          ansible.builtin.command: update-ca-trust extract
          changed_when: true
          become: yes
