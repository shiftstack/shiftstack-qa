---
- name: Discover if aggregates exist and get the nova AZ list
  ansible.builtin.command: "openstack availability zone list --compute -c 'Zone Name' -f value"
  register: existing_nova_azs
  environment:
    OS_CLOUD: "{{ user_cloud }}"
  changed_when: false

- name: Declare variables - even distribution of OCP VMs on the available nova AZs.
  ansible.builtin.set_fact:
    nova_az_for_workers: "{{ (existing_nova_azs.stdout_lines * openshift_topology.replicas.worker | int)[: openshift_topology.replicas.worker | int] }}"
    nova_az_for_masters: "{{ (existing_nova_azs.stdout_lines * openshift_topology.replicas.master | int)[: openshift_topology.replicas.master | int] }}"

# If --openshift-root-volumes is yes, discover the cinder AZs (different to default one 'nova') to create volumes for the OCP nodes there
- name: Discover AZs when using root volumes
  when: openshift_root_volumes
  block:
    - name: Check if cinder AZs are ready to be used
      ansible.builtin.shell: |
        set -o pipefail &&
        openstack volume service list -c State -f value | grep "down"
      environment:
        OS_CLOUD: "{{ user_cloud }}"
      register: any_cinder_az_down
      changed_when: false
      failed_when: false

    - name: Fail if a down cinder zone is found
      ansible.builtin.fail:
        msg: "ERROR: some of the cinder AZs are down. Check OSP or disable root_volumes installation for this setup."
      when: any_cinder_az_down is succeeded

    - name: Discover existing cinder AZs
      ansible.builtin.shell: |
        set -o pipefail
        openstack availability zone list --volume -c 'Zone Name' -f value | grep -v 'nova' || true
      register: existing_cinder_azs
      environment:
        OS_CLOUD: "{{ user_cloud }}"
      changed_when: false

    - name: Declare variables - even distribution of root volumes for OCP VMs on the available cinder AZs.
      ansible.builtin.set_fact:
        cinder_az_for_workers: "{{ (existing_cinder_azs.stdout_lines * openshift_topology.replicas.worker | int)[: openshift_topology.replicas.worker | int] }}"
        cinder_az_for_masters: "{{ (existing_cinder_azs.stdout_lines * openshift_topology.replicas.master | int)[: openshift_topology.replicas.master | int] }}"
