---
- name: Get the UPI provisioning playbooks from '{{ upi_github_repo_url }}'
  ansible.builtin.get_url:
    url: "{{ upi_github_repo_url }}/{{ item }}"
    dest: "{{ upi_playbooks_dir }}"
    mode: u=rw,g=rw,o=r
  loop:
    - bootstrap.yaml
    - compute-nodes.yaml
    - control-plane.yaml
    - down-bootstrap.yaml
    - down-compute-nodes.yaml
    - down-containers.yaml
    - down-control-plane.yaml
    - down-security-groups.yaml
    - security-groups.yaml
    - update-network-resources.yaml

- name: Overwrite default (180) timeout in bootstrap server creation task (needed in slow envs)
  ansible.builtin.lineinfile:
    path: "{{ upi_playbooks_dir }}/bootstrap.yaml"
    line: "      timeout: 480"
    insertafter: "os_server"

- name: Remove {{ local_template_dir }} directory in the ansible controller if exists
  ansible.builtin.file:
    path: "{{ local_template_dir }}"
    state: absent
  delegate_to: localhost

- name: Create {{ local_template_dir }} directory in the ansible controller
  ansible.builtin.file:
    path: "{{ local_template_dir }}"
    state: directory
    mode: u=rwx,g=rw,o=r
  delegate_to: localhost

- name: Replace the hardcoded values in '{{ upi_inventory_file }}'
  ansible.builtin.replace:
    path: "{{ upi_inventory_file }}"
    regexp: "{{ item.regexp }}"
    replace: "{{ item.replace }}"
  with_items:
    - {regexp: "os_flavor_master:.*", replace: "os_flavor_master: '{{ topology.flavors.master.name }}'"}
    - {regexp: "os_flavor_worker:.*", replace: "os_flavor_worker: '{{ topology.flavors.worker.name }}'"}
    - {regexp: "os_cp_nodes_number:.*", replace: "os_cp_nodes_number: {{ topology.replicas.master }}"}
    - {regexp: "os_compute_nodes_number:.*", replace: "os_compute_nodes_number: {{ topology.replicas.worker }}"}

- name: Copy the manual destroy script (not executed by the job)
  ansible.builtin.copy:
    content: |
      #!/bin/bash
      export ANSIBLE_HOST_KEY_CHECKING=False
      source {{ user_env_file }}

      ansible-playbook -i "{{ upi_inventory_file }}" \
        "{{ upi_playbooks_dir }}/down-bootstrap.yaml"      \
        "{{ upi_playbooks_dir }}/down-control-plane.yaml"  \
        "{{ upi_playbooks_dir }}/down-compute-nodes.yaml"  \
        "{{ upi_playbooks_dir }}/down-containers.yaml"     \
        "{{ upi_playbooks_dir }}/down-network.yaml"        \
        "{{ upi_playbooks_dir }}/down-security-groups.yaml"
    dest: "{{ home_dir }}/manual-destroy.sh"
    mode: u=rw,g=rw,o=r
