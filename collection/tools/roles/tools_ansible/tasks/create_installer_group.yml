---
- name: Reset the 'installer_vm_exists' value
  ansible.builtin.set_fact:
    installer_vm_exists: false

- name: Check if '{{ user_cloud }}' includes '{{ installer_vm_name }}'
  openstack.cloud.server_info:
    cloud: "{{ user_cloud }}"
    server: "{{ installer_vm_name }}"
  register: server_info
  failed_when: false

- name: Set fact when the '{{ installer_vm_name }}' VM is deployed
  ansible.builtin.set_fact:
    installer_vm_exists: true
  when:
    - server_info is succeeded
    - server_info.servers | default([]) | length == 1

- name: Add host installer to inventory when the installer host VM exists
  when: installer_vm_exists
  block:
    - name: Include vars from registered resources
      ansible.builtin.include_vars:
        file: "{{ resources_file }}"
        name: resources

    - name: Create the installer inventory group and add the installer host
      ansible.builtin.include_role:
        name: tools_installer_host
        tasks_from: add_installer_host_to_installer_group.yml
      vars:
        installer_host_fip: "{{ resources.installer_fip }}"

- name: Add host localhost to inventory when the installer host VM doesn't exist
  when: not installer_vm_exists
  block:
    - name: Flush the inventory in a case the {{ installer_group }} group is present
      ansible.builtin.include_role:
        name: tools_ansible
        tasks_from: flush_inventory.yml
      when: "installer_group in groups"

    - name: Add host localhost to inventory when the installer host VM doesn't exist
      ansible.builtin.add_host:
        name: "localhost"
        groups: "{{ installer_group }}"
        ansible_connection: "local"

    - name: Update the inventory '{{ inventory.dir }}/hosts'
      ansible.builtin.include_role:
        name: tools_ansible
        tasks_from: update_inventory.yml
      vars:
        inventory_config_dir: "{{ inventory.dir }}"
        inventory_symlink_file: "{{ inventory.dir }}/hosts"
        inventory_file_name: "{{ inventory.hosts_file }}"
        inventory_backup_file: "{{ inventory.backup_file }}"

- name: Print the '{{ installer_group }}' group hosts
  ansible.builtin.debug:
    var: groups[installer_group]
