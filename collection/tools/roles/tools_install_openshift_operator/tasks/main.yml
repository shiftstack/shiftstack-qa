---
- name: Assert that the required vars exist
  ansible.builtin.assert:
    that:
      - install_openshift_operator_name is defined
      - install_openshift_operator_package is defined
      - install_openshift_operator_provided_api is defined

- name: Create operator group
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition:
      apiVersion: operators.coreos.com/v1
      kind: OperatorGroup
      metadata:
        name: "{{ install_openshift_operator_catalogsource }}"
        namespace: "{{ install_openshift_operator_namespace }}"

- name: Get default subscription channel
  ansible.builtin.shell: |
    oc get packagemanifest {{ install_openshift_operator_package }} -n openshift-marketplace -o jsonpath='{.status.defaultChannel}'
  changed_when: false
  register: operator_channel

- name: Create operator subscription
  kubernetes.core.k8s:
    kubeconfig: "{{ kubeconfig }}"
    state: present
    definition:
      apiVersion: operators.coreos.com/v1alpha1
      kind: Subscription
      metadata:
        name: "{{ install_openshift_operator_name }}"
        namespace: "{{ install_openshift_operator_namespace }}"
      spec:
        channel: "{{ operator_channel.stdout }}"
        installPlanApproval: Automatic
        name: "{{ install_openshift_operator_name }}"
        source: "{{ install_openshift_operator_catalogsource }}"
        sourceNamespace: openshift-marketplace
    wait: true
    wait_timeout: 300
    wait_condition:
      type: CatalogSourcesUnhealthy
      status: "False"

- name: Wait for operator pods to be ready
  ansible.builtin.shell: |
    oc wait pod --all --for=condition=Ready -n {{ install_openshift_operator_namespace }} --timeout=15m
  environment:
    KUBECONFIG: "{{ kubeconfig }}"
  retries: 5
  delay: 10
  register: install_openshift_operator_pods_result
  until: install_openshift_operator_pods_result is not failed
  changed_when: false

- name: Define a resource for the API provided by the operator
  when: install_openshift_operator_provided_api is defined
  block:
    - name: Get {{ install_openshift_operator_provided_api }} default parameters
      ansible.builtin.shell: |
        set -o pipefail
        oc get csv -A -o json | \
          jq -r '.items[] | select(.metadata.name | startswith("{{ install_openshift_operator_provided_api }}"))' | \
          jq -r '.metadata.annotations."operatorframework.io/initialization-resource"' | jq -r | tee "/tmp/default.json"
      environment:
        KUBECONFIG: "{{ kubeconfig }}"
      retries: 3
      delay: 10
      register: install_openshift_operator_conf_result
      until: install_openshift_operator_conf_result.stdout_lines | length > 0
      changed_when: false

    - name: Create {{ install_openshift_operator_provided_api }} based on default values
      kubernetes.core.k8s:
        kubeconfig: "{{ kubeconfig }}"
        state: present
        src: "/tmp/default.json"
        apply: true

    - name: Wait for {{ install_openshift_operator_provided_api }} to be ready
      ansible.builtin.shell: |
        set -o pipefail
        NAME=$(oc get {{ install_openshift_operator_provided_api }} -A -o json | jq -r '.items[].metadata.name')
        oc wait {{ install_openshift_operator_provided_api }} $NAME --for jsonpath='{.status.phase}'=Ready --timeout=15m
      environment:
        KUBECONFIG: "{{ kubeconfig }}"
      retries: 3
      delay: 10
      register: install_openshift_operator_result
      until: install_openshift_operator_result is not failed
      changed_when: false
